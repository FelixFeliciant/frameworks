<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" lang="en"><head>



	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<meta name="author" content="Valerio Proietti, mad4milk" />
	<meta name="copyright" content="copyright 2006 www.mad4milk.net" />
	<meta name="Description" content="mootools, a super lightweight web2.0 javascript framework" />
	<meta name="Keywords" content="mootools,moo.fx,javascript effects,javascript framework,ajax framework,moo.ajax" />
	<meta name="robots" content="all" />

	<!--

               ____        _                      __  __      __   __
   ___   __   / __'\     _\'\      __   ___   __ /\_\/\ \    /\ \ / /  web 2.0 beta
  /\  \_/ '\ /\ \Z\ \   / __ \    /__\ /\  \_/ '\\/_/\ \ \   \ \ \ /__
  \ \  __/\ \\ \  __ \ /\ \Z\ \  / \Z\\\ \  __/\ \  __\ \ \___\ \  _ '\
   \ \_\ \ \_\\ \_\ \ \\ \_____\/\____ \\ \_\ \ \_\/\ \\ \____\\ \_\ \_\
    \/_/  \/_/ \/_/\/_/ \/_____/\/___/\_\\/_/  \/_/\ \_\\/____/ \/_/\/_/
                                     \/_/           \/_/       be happy.

	-->

	<title>MooTools Docs - Plugins/String</title>
	
	<!-- Shortcut Icons -->
	
	<link href="http://mootools.net/assets/icons/icon.png" rel="shortcut icon" type="image/x-icon" />
	<link href="http://mootools.net/assets/icons/ipod-icon.png" rel="apple-touch-icon" />
	
	<!-- BluePrint -->
	
	<link href="assets/screen.css" rel="stylesheet" type="text/css" media="screen" />
	<link href="assets/print.css" rel="stylesheet" type="text/css" media="print" />
	
	<!-- StyleSheets -->
	
	<link href="assets/layout.css" rel="stylesheet" type="text/css" media="screen" />
	<link href="assets/main.css" rel="stylesheet" type="text/css" media="screen" />
	
	<!-- Scripts -->
	
	<script src="assets/mootools.js" type="text/javascript"></script>
	<script src="assets/mootools_002.js" type="text/javascript"></script>
	
	<!-- Section Specific -->
	
	<link href="assets/docs.css" rel="stylesheet" type="text/css" media="screen" />	
<script type="text/javascript" src="assets/jsapi"></script>	
<script type="text/javascript" src="assets/docs.js"></script><script src="assets/a" type="text/javascript"></script><script src="assets/defaulten.js" type="text/javascript"></script>
	
</head><body>

<div id="header">
	
	<div class="container">
		<a href="http://mediatemple.net/" id="mediatemple"><span>in partnership with mediatemple</span></a>

		<div id="logo">
			<h1><a href="http://mootools.net/"><span>MooTools</span></a></h1>
			<h2><span>a compact javascript framework</span></h2>
		</div>

	</div>
	
</div>

<div id="wrapper">

		<div class="container">
		
			<div id="main-menu" class="span-4">
			
			<h4>Core</h4>
<div><a href="Core.htm">Core</a></div>
<div><a href="Browser.htm">Browser</a></div>
<h4>Native</h4>
<div><a href="Array.htm">Array</a></div>
<div><a href="Function.htm">Function</a></div>
<div><a href="Number.htm">Number</a></div>
<div><a href="String.htm">String</a></div>
<div><a href="Hash.htm">Hash</a></div>
<div><a href="Event.htm">Event</a></div>
<h4>Class</h4>
<div><a href="Class.htm">Class</a></div>
<div><a href="Class.Extras.htm">Class.Extras</a></div>
<h4>Element</h4>
<div><a href="Element.htm">Element</a></div>
<div><a href="Element.Event.htm">Element.Event</a></div>
<div><a href="Element.Style.htm">Element.Style</a></div>
<div><a href="Element.Dimensions.htm">Element.Dimensions</a></div>
<h4>Utilities</h4>
<div><a href="Selectors.htm">Selectors</a></div>
<div><a href="DomReady.htm">DomReady</a></div>
<div><a href="JSON.htm">JSON</a></div>
<div><a href="Cookie.htm">Cookie</a></div>
<div><a href="Swiff.htm">Swiff</a></div>
<h4>Fx</h4>
<div><a href="Fx.htm">Fx</a></div>
<div><a href="Fx.CSS.htm">Fx.CSS</a></div>
<div><a href="Fx.Tween.htm">Fx.Tween</a></div>
<div><a href="Fx.Morph.htm">Fx.Morph</a></div>
<div><a href="Fx.Transitions.htm">Fx.Transitions</a></div>
<h4>Request</h4>
<div><a href="Request.htm">Request</a></div>
<div><a href="Request.HTML.htm">Request.HTML</a></div>
<div><a href="Request.JSON.htm">Request.JSON</a></div>
<h4>Plugins</h4>
<div><a href="Fx.Slide.htm">Fx.Slide</a></div>
<div><a href="Fx.Scroll.htm">Fx.Scroll</a></div>
<div><a href="Fx.Elements.htm">Fx.Elements</a></div>
<div><a href="Drag.htm">Drag</a></div>
<div><a href="Drag.Move.htm">Drag.Move</a></div>
<div><a href="Color.htm">Color</a></div>
<div><a href="Group.htm">Group</a></div>
<div><a href="Hash.Cookie.htm">Hash.Cookie</a></div>
<div><a href="Sortables.htm">Sortables</a></div>
<div><a href="Tips.htm">Tips</a></div>
<div><a href="SmoothScroll.htm">SmoothScroll</a></div>
<div><a href="Slider.htm">Slider</a></div>
<div><a href="Scroller.htm">Scroller</a></div>
<div><a href="Assets.htm">Assets</a></div>
<div><a href="Accordion.htm">Accordion</a></div>
</div>
		
			<div id="main" class="l-border r-border span-15">
			
				<h1 id="String"><a href="#String">Native: String</a></h1>

<p class="description">A collection of the String Object prototype methods.</p>

<h3>See Also:</h3>

<ul>
<li><a href="http://developer.mozilla.org/en/docs/Core_JavaScript_1.5_Reference:Global_Objects:String">MDC String</a></li>
</ul>
<h2 id="String:test"><a href="#String:test">String Method: test</a></h2>

<p class="description">Searches for a match between the string and a regular expression.
For more information see <a href="http://developer.mozilla.org/en/docs/Core_JavaScript_1.5_Reference:Objects:RegExp:test">MDC Regexp:test</a>.</p>

<h3>Syntax:</h3>

<pre class="javascript">myString.<span class="me1">test</span><span class="br0">(</span>regex<span class="br0">[</span>,params<span class="br0">]</span><span class="br0">)</span>;
</pre>

<h3>Arguments:</h3>

<ol>
<li>regex  - (<em>mixed</em>) The string or regular expression you want to match the string with.</li>
<li>params - (<em>string</em>, optional) If first parameter is a string, any parameters you want to pass to the regular expression ('g' has no effect).</li>
</ol>
<h3>Returns:</h3>

<ul>
<li>(<em>boolean</em>) <code>true</code>, if a match for the regular expression is found in this string.</li>
<li>(<em>boolean</em>) <code>false</code> if is not found</li>
</ul>
<h3>Examples:</h3>

<pre class="javascript"><span class="st0">&quot;I like cookies&quot;</span>.<span class="me1">test</span><span class="br0">(</span><span class="st0">&quot;cookie&quot;</span><span class="br0">)</span>; <span class="co1">//returns true</span>
<span class="st0">&quot;I like cookies&quot;</span>.<span class="me1">test</span><span class="br0">(</span><span class="st0">&quot;COOKIE&quot;</span>, <span class="st0">&quot;i&quot;</span><span class="br0">)</span>; <span class="co1">//returns true (ignore case)</span>
<span class="st0">&quot;I like cookies&quot;</span>.<span class="me1">test</span><span class="br0">(</span><span class="st0">&quot;cake&quot;</span><span class="br0">)</span>; <span class="co1">//returns false</span>
</pre>

<h3>See Also:</h3>

<ul>
<li><a href="http://developer.mozilla.org/en/docs/Core_JavaScript_1.5_Guide:Regular_Expressions">MDC Regular Expressions</a></li>
</ul>
<h2 id="String:contains"><a href="#String:contains">String Method: contains</a></h2>

<p class="description">Checks to see if the string passed in is
contained in this string.
If the separator parameter is passed, will check to see if the string
is contained in the list of values separated by that parameter.</p>

<h3>Syntax:</h3>

<pre class="javascript">myString.<span class="me1">contains</span><span class="br0">(</span>string<span class="br0">[</span>, separator<span class="br0">]</span><span class="br0">)</span>;
</pre>

<h3>Arguments:</h3>

<ol>
<li>string    - (<em>string</em>) The string to search for.</li>
<li>separator - (<em>string</em>, optional) The string that separates the values in this string (eg. Element classNames are separated by a ' ').</li>
</ol>
<h3>Returns:</h3>

<ul>
<li>(<em>boolean</em>) <code>true</code> if the string is contained in this string</li>
<li>(<em>boolean</em>) <code>false</code> if not.</li>
</ul>
<h3>Examples:</h3>

<pre class="javascript"><span class="st0">'a bc'</span>.<span class="me1">contains</span><span class="br0">(</span><span class="st0">'bc'</span><span class="br0">)</span>; <span class="co1">//returns true</span>
<span class="st0">'a b c'</span>.<span class="me1">contains</span><span class="br0">(</span><span class="st0">'c'</span>, <span class="st0">' '</span><span class="br0">)</span>; <span class="co1">//returns true</span>
<span class="st0">'a bc'</span>.<span class="me1">contains</span><span class="br0">(</span><span class="st0">'b'</span>, <span class="st0">' '</span><span class="br0">)</span>; <span class="co1">//returns false</span>
</pre>

<h2 id="String:trim"><a href="#String:trim">String Method: trim</a></h2>

<p class="description">Trims the leading and trailing spaces off a string.</p>

<h3>Syntax:</h3>

<pre class="javascript">myString.<span class="me1">trim</span><span class="br0">(</span><span class="br0">)</span>;
</pre>

<h3>Returns:</h3>

<ul>
<li>(<em>string</em>) The trimmed string.</li>
</ul>
<h3>Examples:</h3>

<pre class="javascript"><span class="st0">&quot;    i like cookies     &quot;</span>.<span class="me1">trim</span><span class="br0">(</span><span class="br0">)</span>; <span class="co1">//&quot;i like cookies&quot;</span>
</pre>

<h2 id="String:clean"><a href="#String:clean">String Method: clean</a></h2>

<p class="description">Removes all extraneous whitespace from a string and trims it (<a href="#String:trim">String:trim</a>).</p>

<h3>Syntax:</h3>

<pre class="javascript">myString.<span class="me1">clean</span><span class="br0">(</span><span class="br0">)</span>;
</pre>

<h3>Returns:</h3>

<ul>
<li>(<em>string</em>) The cleaned string.</li>
</ul>
<h3>Examples:</h3>

<pre class="javascript"><span class="st0">&quot; i      like     cookies      <span class="es0">\n</span><span class="es0">\n</span>&quot;</span>.<span class="me1">clean</span><span class="br0">(</span><span class="br0">)</span>; <span class="co1">//returns &quot;i like cookies&quot;</span>
</pre>

<h2 id="String:camelCase"><a href="#String:camelCase">String Method: camelCase</a></h2>

<p class="description">Converts a hyphenated string to a camelcased string.</p>

<h3>Syntax:</h3>

<pre class="javascript">myString.<span class="me1">camelCase</span><span class="br0">(</span><span class="br0">)</span>;
</pre>

<h3>Returns:</h3>

<ul>
<li>(<em>string</em>) The camelcased string.</li>
</ul>
<h3>Examples:</h3>

<pre class="javascript"><span class="st0">&quot;I-like-cookies&quot;</span>.<span class="me1">camelCase</span><span class="br0">(</span><span class="br0">)</span>; <span class="co1">//returns &quot;ILikeCookies&quot;</span>
</pre>

<h2 id="String:hyphenate"><a href="#String:hyphenate">String Method: hyphenate</a></h2>

<p class="description">Converts a camelcased string to a hyphenated string.</p>

<h3>Syntax:</h3>

<pre class="javascript">myString.<span class="me1">hyphenate</span><span class="br0">(</span><span class="br0">)</span>;
</pre>

<h3>Returns:</h3>

<ul>
<li>(<em>string</em>) The hyphenated string.</li>
</ul>
<h3>Examples:</h3>

<pre class="javascript"><span class="st0">&quot;ILikeCookies&quot;</span>.<span class="me1">hyphenate</span><span class="br0">(</span><span class="br0">)</span>; <span class="co1">//returns &quot;I-like-cookies&quot;</span>
</pre>

<h2 id="String:capitalize"><a href="#String:capitalize">String Method: capitalize</a></h2>

<p class="description">Converts the first letter of each word in a string to uppercase.</p>

<h3>Syntax:</h3>

<pre class="javascript">myString.<span class="me1">capitalize</span><span class="br0">(</span><span class="br0">)</span>;
</pre>

<h3>Returns:</h3>

<ul>
<li>(<em>string</em>) The capitalized string.</li>
</ul>
<h3>Examples:</h3>

<pre class="javascript"><span class="st0">&quot;i like cookies&quot;</span>.<span class="me1">capitalize</span><span class="br0">(</span><span class="br0">)</span>; <span class="co1">//returns &quot;I Like Cookies&quot;</span>
</pre>

<h2 id="String:escapeRegExp"><a href="#String:escapeRegExp">String Method: escapeRegExp</a></h2>

<p class="description">Escapes all regular expression characters from the string.</p>

<h3>Syntax:</h3>

<pre class="javascript">myString.<span class="me1">escapeRegExp</span><span class="br0">(</span><span class="br0">)</span>;
</pre>

<h3>Returns:</h3>

<ul>
<li>(<em>string</em>) The escaped string.</li>
</ul>
<h3>Examples:</h3>

<pre class="javascript"><span class="st0">'animals.sheep[1]'</span>.<span class="me1">escapeRegExp</span><span class="br0">(</span><span class="br0">)</span>; <span class="co1">//returns 'animals\.sheep\[1\]'</span>
</pre>

<h2 id="String:toInt"><a href="#String:toInt">String Method: toInt</a></h2>

<p class="description">Parses this string and returns a number of the specified radix or base.</p>

<h3>Syntax:</h3>

<pre class="javascript">myString.<span class="me1">toInt</span><span class="br0">(</span><span class="br0">[</span>base<span class="br0">]</span><span class="br0">)</span>;
</pre>

<h3>Arguments:</h3>

<ol>
<li>base - (<em>number</em>, optional) The base to use (defaults to 10).</li>
</ol>
<h3>Returns:</h3>

<ul>
<li>(<em>number</em>) The number.</li>
<li>(<em>NaN</em>) If the string is not numeric, returns NaN.</li>
</ul>
<h3>Examples:</h3>

<pre class="javascript"><span class="st0">&quot;4em&quot;</span>.<span class="me1">toInt</span><span class="br0">(</span><span class="br0">)</span>; <span class="co1">//returns 4</span>
<span class="st0">&quot;10px&quot;</span>.<span class="me1">toInt</span><span class="br0">(</span><span class="br0">)</span>; <span class="co1">//returns 10</span>
</pre>

<h3>See Also:</h3>

<ul>
<li><a href="http://developer.mozilla.org/en/docs/Core_JavaScript_1.5_Reference:Global_Functions:parseInt">MDC parseInt</a></li>
</ul>
<h2 id="String:toFloat"><a href="#String:toFloat">String Method: toFloat</a></h2>

<p class="description">Parses this string and returns a floating point number.</p>

<h3>Syntax:</h3>

<pre class="javascript">myString.<span class="me1">toFloat</span><span class="br0">(</span><span class="br0">)</span>;
</pre>

<h3>Returns:</h3>

<ul>
<li>(<em>number</em>) The float.</li>
<li>(<em>NaN</em>) If the string is not numeric, returns NaN.</li>
</ul>
<h3>Examples:</h3>

<pre class="javascript">    <span class="st0">&quot;95.25%&quot;</span>.<span class="me1">toFloat</span><span class="br0">(</span><span class="br0">)</span>; <span class="co1">//returns 95.25</span>
    <span class="st0">&quot;10.848&quot;</span>.<span class="me1">toFloat</span><span class="br0">(</span><span class="br0">)</span>; <span class="co1">//returns 10.848</span>
</pre>

<h3>See Also:</h3>

<ul>
<li><a href="http://developer.mozilla.org/en/docs/Core_JavaScript_1.5_Reference:Global_Functions:parseFloat">MDC parseFloat</a></li>
</ul>
<h2 id="String:hexToRgb"><a href="#String:hexToRgb">String Method: hexToRgb</a></h2>

<p class="description">Converts a hexidecimal color value to RGB. Input
string must be in one of the following hexidecimal color formats (with
or without the hash).
'#ffffff', #fff', 'ffffff', or 'fff'</p>

<h3>Syntax:</h3>

<pre class="javascript">myString.<span class="me1">hexToRgb</span><span class="br0">(</span><span class="br0">[</span>array<span class="br0">]</span><span class="br0">)</span>;
</pre>

<h3>Arguments:</h3>

<ol>
<li>array - (<em>boolean</em>, optional) If true is passed, will output an array (eg. [255, 51, 0]) instead of a string (eg. &quot;rgb(255,51,0)&quot;).</li>
</ol>
<h3>Returns:</h3>

<ul>
<li>(<em>string</em>) A string representing the color in RGB.</li>
<li>(<em>array</em>) If the array flag is set, an array will be returned instead.</li>
</ul>
<h3>Examples:</h3>

<pre class="javascript"><span class="st0">&quot;#123&quot;</span>.<span class="me1">hexToRgb</span><span class="br0">(</span><span class="br0">)</span>; <span class="co1">//returns &quot;rgb(17,34,51)&quot;</span>
<span class="st0">&quot;112233&quot;</span>.<span class="me1">hexToRgb</span><span class="br0">(</span><span class="br0">)</span>; <span class="co1">//returns &quot;rgb(17,34,51)&quot;</span>
<span class="st0">&quot;#112233&quot;</span>.<span class="me1">hexToRgb</span><span class="br0">(</span><span class="kw2">true</span><span class="br0">)</span>; <span class="co1">//returns [17, 34, 51]</span>
</pre>

<h2 id="String:rgbToHex"><a href="#String:rgbToHex">String Method: rgbToHex</a></h2>

<p class="description">Converts an RGB color value to hexidecimal. Input string must be in one of the following RGB color formats.
&quot;rgb(255,255,255)&quot;, or &quot;rgba(255,255,255,1)&quot;</p>

<h3>Syntax:</h3>

<pre class="javascript">myString.<span class="me1">rgbToHex</span><span class="br0">(</span><span class="br0">[</span>array<span class="br0">]</span><span class="br0">)</span>;
</pre>

<h3>Arguments:</h3>

<ol>
<li>array - (<em>boolean</em>, optional) If true is passed, will output an array (eg. ['ff','33','00']) instead of a string (eg. &quot;#ff3300&quot;).</li>
</ol>
<h3>Returns:</h3>

<ul>
<li>(<em>string</em>) A string representing the color in hexadecimal, or transparent if the fourth value of rgba in the input string is 0.</li>
<li>(<em>array</em>) If the array flag is set, an array will be returned instead.</li>
</ul>
<h3>Examples:</h3>

<pre class="javascript"><span class="st0">&quot;rgb(17,34,51)&quot;</span>.<span class="me1">rgbToHex</span><span class="br0">(</span><span class="br0">)</span>; <span class="co1">//returns &quot;#112233&quot;</span>
<span class="st0">&quot;rgb(17,34,51)&quot;</span>.<span class="me1">rgbToHex</span><span class="br0">(</span><span class="kw2">true</span><span class="br0">)</span>; <span class="co1">//returns ['11','22','33']</span>
<span class="st0">&quot;rgba(17,34,51,0)&quot;</span>.<span class="me1">rgbToHex</span><span class="br0">(</span><span class="br0">)</span>; <span class="co1">//returns &quot;transparent&quot;</span>
</pre>

<h3>See Also:</h3>

<ul>
<li><a href="Array.htm#Array:rgbToHex">Array:rgbToHex</a></li>
</ul>
<h2 id="String:stripScripts"><a href="#String:stripScripts">String Method: stripScripts</a></h2>

<p class="description">Strips the String of its <code>&lt;script&gt;</code> tags and anything in between them.</p>

<h3>Syntax:</h3>

<pre class="javascript">myString.<span class="me1">stripScripts</span><span class="br0">(</span><span class="br0">[</span>evaluate<span class="br0">]</span><span class="br0">)</span>;
</pre>

<h3>Arguments:</h3>

<ol>
<li>evaluate - (<em>boolean</em>, optional) If true is passed, the scripts within the String will be evaluated.</li>
</ol>
<h3>Returns:</h3>

<ul>
<li>(<em>string</em>) - The String without the stripped scripts.</li>
</ul>
<h3>Examples:</h3>

<pre class="javascript"><span class="kw2">var</span> myString = <span class="st0">&quot;&lt;script&gt;alert('Hello')&lt;/script&gt;Hello, World.&quot;</span>;
myString.<span class="me1">stripScripts</span><span class="br0">(</span><span class="br0">)</span>; <span class="co1">//Returns &quot;Hello, World.&quot;</span>
myString.<span class="me1">stripScripts</span><span class="br0">(</span><span class="kw2">true</span><span class="br0">)</span>; <span class="co1">//Alerts &quot;Hello&quot;, then returns &quot;Hello, World.&quot;</span>
</pre>

<h2 id="String:substitute"><a href="#String:substitute">String Method: substitute</a></h2>

<p class="description">Substitutes keywords in a string using an object/array.
Removes undefined keywords and ignores escaped keywords.</p>

<h3>Syntax:</h3>

<pre class="javascript">myString.<span class="me1">substitute</span><span class="br0">(</span>object<span class="br0">[</span>, regexp<span class="br0">]</span><span class="br0">)</span>;
</pre>

<h3>Arguments:</h3>

<ol>
<li>object - (<em>mixed</em>) The key/value pairs used to substitute a string.</li>
<li>regexp - (<em>regexp</em>, optional) The regexp pattern to be used in the string keywords, with global flag. Defaults to /\?{([^}]+)}/g .</li>
</ol>
<h3>Returns:</h3>

<ul>
<li>(<em>string</em>) - The substituted string.</li>
</ul>
<h3>Examples:</h3>

<pre class="javascript"><span class="kw2">var</span> myString = <span class="st0">&quot;{subject} is {property_1} and {property_2}.&quot;</span>;
<span class="kw2">var</span> myObject = <span class="br0">{</span>subject: <span class="st0">'Jack Bauer'</span>, property_1: <span class="st0">'our lord'</span>, property_2: <span class="st0">'savior'</span><span class="br0">}</span>;
myString.<span class="me1">substitute</span><span class="br0">(</span>myObject<span class="br0">)</span>; <span class="co1">//Jack Bauer is our lord and savior</span>
</pre>

			
			</div>
		
			<div id="menu" class="span-2 last">
			
			<h4 class="menu-item"><a href="#String">String</a></h4>
<div class="menu-item"><a href="#String:test">test</a></div>
<div class="menu-item"><a href="#String:contains">contains</a></div>
<div class="menu-item"><a href="#String:trim">trim</a></div>
<div class="menu-item"><a href="#String:clean">clean</a></div>
<div class="menu-item"><a href="#String:camelCase">camelCase</a></div>
<div class="menu-item"><a href="#String:hyphenate">hyphenate</a></div>
<div class="menu-item"><a href="#String:capitalize">capitalize</a></div>
<div class="menu-item"><a href="#String:escapeRegExp">escapeRegExp</a></div>
<div class="menu-item"><a href="#String:toInt">toInt</a></div>
<div class="menu-item"><a href="#String:toFloat">toFloat</a></div>
<div class="menu-item"><a href="#String:hexToRgb">hexToRgb</a></div>
<div class="menu-item"><a href="#String:rgbToHex">rgbToHex</a></div>
<div class="menu-item"><a href="#String:stripScripts">stripScripts</a></div>
<div class="menu-item"><a href="#String:substitute">substitute</a></div>
</div>
			
			<div id="footy" class="clear span-24">
				<p class="quiet">This documentation is released under a <a href="http://creativecommons.org/licenses/by-nc-sa/3.0/">Attribution-NonCommercial-ShareAlike 3.0</a> License.</p>
			</div>
		
		</div>
	
	</div>
<div id="footer">
	<div class="container">
		<p class="copy"><a href="http://mad4milk.net/" id="mucca"></a></p>
		<p>copyright ©2006-2008 <a href="http://mad4milk.net/">Valerio Proietti</a></p>
	</div>
</div>

</body></html>