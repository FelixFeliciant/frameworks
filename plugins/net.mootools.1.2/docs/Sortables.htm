<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" lang="en"><head>



	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<meta name="author" content="Valerio Proietti, mad4milk" />
	<meta name="copyright" content="copyright 2006 www.mad4milk.net" />
	<meta name="Description" content="mootools, a super lightweight web2.0 javascript framework" />
	<meta name="Keywords" content="mootools,moo.fx,javascript effects,javascript framework,ajax framework,moo.ajax" />
	<meta name="robots" content="all" />

	<!--

               ____        _                      __  __      __   __
   ___   __   / __'\     _\'\      __   ___   __ /\_\/\ \    /\ \ / /  web 2.0 beta
  /\  \_/ '\ /\ \Z\ \   / __ \    /__\ /\  \_/ '\\/_/\ \ \   \ \ \ /__
  \ \  __/\ \\ \  __ \ /\ \Z\ \  / \Z\\\ \  __/\ \  __\ \ \___\ \  _ '\
   \ \_\ \ \_\\ \_\ \ \\ \_____\/\____ \\ \_\ \ \_\/\ \\ \____\\ \_\ \_\
    \/_/  \/_/ \/_/\/_/ \/_____/\/___/\_\\/_/  \/_/\ \_\\/____/ \/_/\/_/
                                     \/_/           \/_/       be happy.

	-->

	<title>MooTools Docs - Plugins/Sortables</title>
	
	<!-- Shortcut Icons -->
	
	<link href="http://mootools.net/assets/icons/icon.png" rel="shortcut icon" type="image/x-icon" />
	<link href="http://mootools.net/assets/icons/ipod-icon.png" rel="apple-touch-icon" />
	
	<!-- BluePrint -->
	
	<link href="assets/screen.css" rel="stylesheet" type="text/css" media="screen" />
	<link href="assets/print.css" rel="stylesheet" type="text/css" media="print" />
	
	<!-- StyleSheets -->
	
	<link href="assets/layout.css" rel="stylesheet" type="text/css" media="screen" />
	<link href="assets/main.css" rel="stylesheet" type="text/css" media="screen" />
	
	<!-- Scripts -->
	
	<script src="assets/mootools.js" type="text/javascript"></script>
	<script src="assets/mootools_002.js" type="text/javascript"></script>
	
	<!-- Section Specific -->
	
	<link href="assets/docs.css" rel="stylesheet" type="text/css" media="screen" />	
<script type="text/javascript" src="assets/jsapi"></script>	
<script type="text/javascript" src="assets/docs.js"></script><script src="assets/a" type="text/javascript"></script><script src="assets/defaulten.js" type="text/javascript"></script>
	
</head><body>

<div id="header">
	
	<div class="container">
		<a href="http://mediatemple.net/" id="mediatemple"><span>in partnership with mediatemple</span></a>

		<div id="logo">
			<h1><a href="http://mootools.net/"><span>MooTools</span></a></h1>
			<h2><span>a compact javascript framework</span></h2>
		</div>

	</div>
	
</div>

<div id="wrapper">

		<div class="container">
		
			<div id="main-menu" class="span-4">
			
			<h4>Core</h4>
<div><a href="Core.htm">Core</a></div>
<div><a href="Browser.htm">Browser</a></div>
<h4>Native</h4>
<div><a href="Array.htm">Array</a></div>
<div><a href="Function.htm">Function</a></div>
<div><a href="Number.htm">Number</a></div>
<div><a href="String.htm">String</a></div>
<div><a href="Hash.htm">Hash</a></div>
<div><a href="Event.htm">Event</a></div>
<h4>Class</h4>
<div><a href="Class.htm">Class</a></div>
<div><a href="Class.Extras.htm">Class.Extras</a></div>
<h4>Element</h4>
<div><a href="Element.htm">Element</a></div>
<div><a href="Element.Event.htm">Element.Event</a></div>
<div><a href="Element.Style.htm">Element.Style</a></div>
<div><a href="Element.Dimensions.htm">Element.Dimensions</a></div>
<h4>Utilities</h4>
<div><a href="Selectors.htm">Selectors</a></div>
<div><a href="DomReady.htm">DomReady</a></div>
<div><a href="JSON.htm">JSON</a></div>
<div><a href="Cookie.htm">Cookie</a></div>
<div><a href="Swiff.htm">Swiff</a></div>
<h4>Fx</h4>
<div><a href="Fx.htm">Fx</a></div>
<div><a href="Fx.CSS.htm">Fx.CSS</a></div>
<div><a href="Fx.Tween.htm">Fx.Tween</a></div>
<div><a href="Fx.Morph.htm">Fx.Morph</a></div>
<div><a href="Fx.Transitions.htm">Fx.Transitions</a></div>
<h4>Request</h4>
<div><a href="Request.htm">Request</a></div>
<div><a href="Request.HTML.htm">Request.HTML</a></div>
<div><a href="Request.JSON.htm">Request.JSON</a></div>
<h4>Plugins</h4>
<div><a href="Fx.Slide.htm">Fx.Slide</a></div>
<div><a href="Fx.Scroll.htm">Fx.Scroll</a></div>
<div><a href="Fx.Elements.htm">Fx.Elements</a></div>
<div><a href="Drag.htm">Drag</a></div>
<div><a href="Drag.Move.htm">Drag.Move</a></div>
<div><a href="Color.htm">Color</a></div>
<div><a href="Group.htm">Group</a></div>
<div><a href="Hash.Cookie.htm">Hash.Cookie</a></div>
<div><a href="Sortables.htm">Sortables</a></div>
<div><a href="Tips.htm">Tips</a></div>
<div><a href="SmoothScroll.htm">SmoothScroll</a></div>
<div><a href="Slider.htm">Slider</a></div>
<div><a href="Scroller.htm">Scroller</a></div>
<div><a href="Assets.htm">Assets</a></div>
<div><a href="Accordion.htm">Accordion</a></div>
</div>
		
			<div id="main" class="l-border r-border span-15">
			
				<h1 id="Sortables"><a href="#Sortables">Class: Sortables</a></h1>

<p class="description">Creates an interface for drag and drop sorting of a list or lists.</p>

<h3>Arguments:</h3>

<ol>
<li>list - (<em>mixed</em>) required, the list or lists that will become sortable.

<ul>
<li>This argument can be an <a href="Element.htm">Element</a>, an array of <a href="Element.htm/Element#Elements">Elements</a>, or a selector. When a single list (or id) is passed, that list will be sortable only with itself.</li>
<li>To enable sorting between lists, one or more lists or id's must be passed using an array or a selector. See Examples below.</li>
</ul>
</li>
<li>options - (<em>object</em>) See options and events below.</li>
</ol>
<h4>Options:</h4>

<ul>
<li>constrain - (<em>boolean</em>: defaults to false) Whether or not to constrain the element being dragged to its parent element.</li>
<li>clone     - (<em>mixed</em>: defaults to false) Whether or not to
display a copy of the actual element under the cursor while dragging.
May also be used as a function which will return an element to be used
as the clone. The function will receive the mousedown event, the
element, and the list as arguments.</li>
<li>handle    - (<em>string</em>: defaults to false) A selector to
select an element inside each sortable item to be used as the handle
for sorting that item. If no match is found, the element is used as its
own handle.</li>
<li>opacity   - (<em>integer</em>: defaults to 1) Opacity of the place holding element</li>
<li>revert    - (<em>mixed</em>: defaults to false) Whether or not to
use an effect to slide the element into its final location after
sorting. If you pass an object it will be used as additional options
for the revert effect.</li>
<li>snap      - (<em>integer</em>: defaults to 4) The number of pixels the element must be dragged for sorting to begin.</li>
</ul>
<h3>Events:</h3>

<ul>
<li>start    - function executed when the item starts dragging</li>
<li>sort     - function executed when the item is inserted into a new place in one of the lists</li>
<li>complete - function executed when the item ends dragging</li>
</ul>
<h3>Examples:</h3>

<pre class="javascript"><span class="kw2">var</span> mySortables = <span class="kw2">new</span> Sortables<span class="br0">(</span><span class="st0">'list-1'</span>, <span class="br0">{</span>
    revert: <span class="br0">{</span> duration: <span class="nu0">500</span>, transition: <span class="st0">'elastic:out'</span> <span class="br0">}</span>
<span class="br0">}</span><span class="br0">)</span>;
<span class="co1">//creates a new Sortable instance over the list with id 'list-1' with some extra options for the revert effect</span>
&nbsp;
<span class="kw2">var</span> mySortables = <span class="kw2">new</span> Sortables<span class="br0">(</span><span class="st0">'#list-1, #list-2'</span>, <span class="br0">{</span>
    constrain: <span class="kw2">true</span>,
    clone: <span class="kw2">false</span>,
    revert: <span class="kw2">true</span>
<span class="br0">}</span><span class="br0">)</span>;
<span class="co1">//creates a new Sortable instance allowing the sorting of the lists with id's 'list-1' and 'list-2' with extra options</span>
<span class="co1">//since constrain was set to true, the items will not be able to be dragged from one list to the other</span>
&nbsp;
<span class="kw2">var</span> mySortables = <span class="kw2">new</span> Sortables<span class="br0">(</span><span class="st0">'#list-1, #list-2, #list-3'</span><span class="br0">)</span>;
<span class="co1">//creates a new Sortable instance allowing sorting between the lists with id's 'list-1', 'list-2, and 'list-3'</span>
<span class="br0">(</span>end<span class="br0">)</span>
</pre>

<h2 id="Sortables:attach"><a href="#Sortables:attach">Sortables Method: attach</a></h2>

<p class="description">Attaches the mouse listener to all the handles, enabling sorting.</p>

<h3>Syntax:</h3>

<pre class="javascript">mySortables.<span class="me1">attach</span><span class="br0">(</span><span class="br0">)</span>;
</pre>

<h3>Returns:</h3>

<ul>
<li>(<em>object</em>) This Sortables instance.</li>
</ul>
<h2 id="Sortables:detach"><a href="#Sortables:detach">Sortables Method: detach</a></h2>

<p class="description">Detaches the mouse listener from all the handles, disabling sorting.</p>

<h3>Syntax:</h3>

<pre class="javascript">mySortables.<span class="me1">detach</span><span class="br0">(</span><span class="br0">)</span>;
</pre>

<h3>Returns:</h3>

<ul>
<li>(<em>object</em>) This Sortables instance.</li>
</ul>
<h2 id="Sortables:addItems"><a href="#Sortables:addItems">Sortables Method: addItems</a></h2>

<p class="description">Allows one or more items to be added to an existing Sortables instance.</p>

<h3>Syntax:</h3>

<pre class="javascript">mySortables.<span class="me1">addItems</span><span class="br0">(</span>item1<span class="br0">[</span>, item2<span class="br0">[</span>, item3<span class="br0">[</span>, ...<span class="br0">]</span><span class="br0">]</span><span class="br0">]</span><span class="br0">)</span>;
</pre>

<h3>Arguments:</h3>

<ol>
<li>items - (<em>mixed</em>) Since Array.flatten is used on the
arguments, a single element, several elements, an array of elements, or
any combination thereof may be passed to this method.</li>
</ol>
<h3>Returns:</h3>

<ul>
<li>(<em>object</em>) This Sortables instance.</li>
</ul>
<h3>Examples:</h3>

<pre class="javascript"><span class="kw2">var</span> mySortables = <span class="kw2">new</span> Sortables<span class="br0">(</span><span class="st0">'#list1, #list2'</span><span class="br0">)</span>;
&nbsp;
<span class="kw2">var</span> element1 = <span class="kw2">new</span> Element<span class="br0">(</span><span class="st0">'div'</span><span class="br0">)</span>;
<span class="kw2">var</span> element2 = <span class="kw2">new</span> Element<span class="br0">(</span><span class="st0">'div'</span><span class="br0">)</span>;
<span class="kw2">var</span> element3 = <span class="kw2">new</span> Element<span class="br0">(</span><span class="st0">'div'</span><span class="br0">)</span>;
&nbsp;
$<span class="br0">(</span><span class="st0">'list1'</span><span class="br0">)</span>.<span class="me1">adopt</span><span class="br0">(</span>element1<span class="br0">)</span>;
$<span class="br0">(</span><span class="st0">'list2'</span><span class="br0">)</span>.<span class="me1">adopt</span><span class="br0">(</span>element2, element3<span class="br0">)</span>;
mySortables.<span class="me1">addItems</span><span class="br0">(</span>element1, element2, element3<span class="br0">)</span>;
</pre>

<h3>Notes:</h3>

<ul>
<li>The items will not be injected into the list automatically as the sortable instance could have many lists.</li>
<li>First inject the elements into the proper list, then call addItems on them.</li>
</ul>
<h3>See Also:</h3>

<ul>
<li>
<a href="#Sortables:removeItems">Sortables:removeItems</a>, <a href="#Sortables:addLists">Sortables:addLists</a>
</li>
</ul>
<h2 id="Sortables:removeItems"><a href="#Sortables:removeItems">Sortables Method: removeItems</a></h2>

<p class="description">Allows one or more items to be removed from an existing Sortables instance.</p>

<h3>Syntax:</h3>

<pre class="javascript">mySortables.<span class="me1">removeItems</span><span class="br0">(</span>item1<span class="br0">[</span>, item2<span class="br0">[</span>, item3<span class="br0">[</span>, ...<span class="br0">]</span><span class="br0">]</span><span class="br0">]</span><span class="br0">)</span>;
</pre>

<h3>Arguments:</h3>

<ol>
<li>items - (<em>mixed</em>) Since Array.flatten is used on the
arguments, a single element, several elements, an array of elements, or
any combination thereof may be passed to this method.</li>
</ol>
<h3>Returns:</h3>

<ul>
<li>(<em>Elements</em>) An Elements collection of all the elements that were removed.</li>
</ul>
<h3>Examples:</h3>

<pre class="javascript"><span class="kw2">var</span> mySortables = <span class="kw2">new</span> Sortables<span class="br0">(</span><span class="st0">'#list1, #list2'</span><span class="br0">)</span>;
&nbsp;
<span class="kw2">var</span> element1 = $<span class="br0">(</span><span class="st0">'list1'</span><span class="br0">)</span>.<span class="me1">getFirst</span><span class="br0">(</span><span class="br0">)</span>;
<span class="kw2">var</span> element2 = $<span class="br0">(</span><span class="st0">'list2'</span><span class="br0">)</span>.<span class="me1">getLast</span><span class="br0">(</span><span class="br0">)</span>;
&nbsp;
mySortables.<span class="me1">removeItems</span><span class="br0">(</span>element1, element2<span class="br0">)</span>.<span class="me1">destroy</span><span class="br0">(</span><span class="br0">)</span>; <span class="co1">//the elements will be removed and destroyed</span>
</pre>

<h3>Notes:</h3>

<ul>
<li>The items will not be removed from the list automatically, they will just no longer be sortable.</li>
<li>First call removeItems on the items, and then remove them from their list containers, or destroy them.</li>
</ul>
<h3>See Also:</h3>

<ul>
<li>
<a href="#Sortables:addItems">Sortables:addItems</a>, <a href="#Sortables:removeLists">Sortables:removeLists</a>
</li>
</ul>
<h2 id="Sortables:addLists"><a href="#Sortables:addLists">Sortables Method: addLists</a></h2>

<p class="description">Allows one or more entire lists to be added to an existing Sortables instance, allowing sorting between the new and old lists.</p>

<h3>Syntax:</h3>

<pre class="javascript">mySortables.<span class="me1">addLists</span><span class="br0">(</span>list1<span class="br0">[</span>, list2<span class="br0">[</span>, list3<span class="br0">[</span>, ...<span class="br0">]</span><span class="br0">]</span><span class="br0">]</span><span class="br0">)</span>;
</pre>

<h3>Arguments:</h3>

<ol>
<li>lists - (<em>mixed</em>) Since Array.flatten is used on the
arguments, a single element, several elements, an array of elements, or
any combination thereof may be passed to this method.</li>
</ol>
<h3>Returns:</h3>

<ul>
<li>(<em>object</em>) This Sortables instance.</li>
</ul>
<h3>Examples:</h3>

<pre class="javascript"><span class="kw2">var</span> mySortables = <span class="kw2">new</span> Sortables<span class="br0">(</span><span class="st0">'list1'</span><span class="br0">)</span>;
mySortables.<span class="me1">addLists</span><span class="br0">(</span>$<span class="br0">(</span><span class="st0">'list2'</span><span class="br0">)</span><span class="br0">)</span>;
</pre>

<h3>Notes:</h3>

<ul>
<li>More complicated usage of this method will allow you to do things like one-directional sorting.</li>
</ul>
<h3>See Also:</h3>

<ul>
<li>
<a href="#Sortables:removeLists">Sortables:removeLists</a>, <a href="#Sortables:addItems">Sortables:addItems</a>
</li>
</ul>
<h2 id="Sortables:removeLists"><a href="#Sortables:removeLists">Sortables Method: removeLists</a></h2>

<p class="description">Allows one or more entire lists to be removed from an existing Sortables instance, preventing sorting between the lists.</p>

<h3>Syntax:</h3>

<pre class="javascript">mySortables.<span class="me1">removeLists</span><span class="br0">(</span>list1<span class="br0">[</span>, list2<span class="br0">[</span>, list3<span class="br0">[</span>, ...<span class="br0">]</span><span class="br0">]</span><span class="br0">]</span><span class="br0">)</span>;
</pre>

<h3>Arguments:</h3>

<ol>
<li>lists - (<em>mixed</em>) Since Array.flatten is used on the
arguments, a single element, several elements, an array of elements, or
any combination thereof may be passed to this method.</li>
</ol>
<h3>Returns:</h3>

<ul>
<li>(<em>Elements</em>) An Elements collection of all the lists that were removed.</li>
</ul>
<h3>Examples:</h3>

<pre class="javascript"><span class="kw2">var</span> mySortables = <span class="kw2">new</span> Sortables<span class="br0">(</span><span class="st0">'#list1, #list2'</span><span class="br0">)</span>;
mySortables.<span class="me1">removeLists</span><span class="br0">(</span>$<span class="br0">(</span><span class="st0">'list2'</span><span class="br0">)</span><span class="br0">)</span>;
</pre>

<h3>See Also:</h3>

<ul>
<li>
<a href="#Sortables:addLists">Sortables:addLists</a>, <a href="#Sortables:removeItems">Sortables:removeItems</a>
</li>
</ul>
<h2 id="Sortables:serialize"><a href="#Sortables:serialize">Sortables Method: serialize</a></h2>

<p class="description">Function to get the order of the elements in the lists of this sortables instance.
For each list, an array containing the order of the elements will be returned.
If more than one list is being used, all lists will be serialized and returned in an array.</p>

<h3>Arguments:</h3>

<ol>
<li>index    - (<em>mixed</em>, optional) An integer or boolean false. index of the list to serialize. Omit or pass false to serialize all lists.</li>
<li>modifier - (<em>function</em>, optional) A function to override the default output of the sortables.  See Examples below</li>
</ol>
<h3>Examples:</h3>

<pre class="javascript">mySortables.<span class="me1">serialize</span><span class="br0">(</span><span class="nu0">1</span><span class="br0">)</span>;
<span class="co1">//returns the second list serialized (remember, arrays are 0 based...);</span>
<span class="co1">//['item_1-1', 'item_1-2', 'item_1-3']</span>
&nbsp;
mySortables.<span class="me1">serialize</span><span class="br0">(</span><span class="br0">)</span>;
<span class="co1">//returns a nested array of all lists serialized, or if only one list exists, that lists order</span>
<span class="coMULTI">/*[['item_1-1', 'item_1-2', 'item_1-3'],
  ['item_2-1', 'item_2-2', 'item_2-3'],
  ['item_3-1', 'item_3-2', 'item_3-3']]*/</span>
&nbsp;
mySortables.<span class="me1">serialize</span><span class="br0">(</span><span class="nu0">2</span>, <span class="kw2">function</span><span class="br0">(</span>element, index<span class="br0">)</span><span class="br0">{</span>
    <span class="kw1">return</span> element.<span class="me1">getProperty</span><span class="br0">(</span><span class="st0">'id'</span><span class="br0">)</span>.<span class="me1">replace</span><span class="br0">(</span><span class="st0">'item_'</span>,<span class="st0">''</span><span class="br0">)</span> + <span class="st0">'='</span> + index;
<span class="br0">}</span><span class="br0">)</span>.<span class="me1">join</span><span class="br0">(</span><span class="st0">'&amp;'</span><span class="br0">)</span>;
<span class="co1">//joins the array with a '&amp;' to return a string of the formatted ids of all the elmements in list 3,with their position</span>
<span class="co1">//'3-0=0&amp;3-1=1&amp;3-2=2'</span>
</pre>

			
			</div>
		
			<div id="menu" class="span-2 last">
			
			<h4 class="menu-item"><a href="#Sortables">Sortables</a></h4>
<div class="menu-item"><a href="#Sortables:attach">attach</a></div>
<div class="menu-item"><a href="#Sortables:detach">detach</a></div>
<div class="menu-item"><a href="#Sortables:addItems">addItems</a></div>
<div class="menu-item"><a href="#Sortables:removeItems">removeItems</a></div>
<div class="menu-item"><a href="#Sortables:addLists">addLists</a></div>
<div class="menu-item"><a href="#Sortables:removeLists">removeLists</a></div>
<div class="menu-item"><a href="#Sortables:serialize">serialize</a></div>
</div>
			
			<div id="footy" class="clear span-24">
				<p class="quiet">This documentation is released under a <a href="http://creativecommons.org/licenses/by-nc-sa/3.0/">Attribution-NonCommercial-ShareAlike 3.0</a> License.</p>
			</div>
		
		</div>
	
	</div>
<div id="footer">
	<div class="container">
		<p class="copy"><a href="http://mad4milk.net/" id="mucca"></a></p>
		<p>copyright ©2006-2008 <a href="http://mad4milk.net/">Valerio Proietti</a></p>
	</div>
</div>

</body></html>